C51 COMPILER V9.03   EEPROM1                                                               11/27/2011 13:18:09 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE EEPROM1
OBJECT MODULE PLACED IN EEPROM1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE EEPROM1.C OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /******** EEPROM1.C *****模擬SPI進行EEPROM存取***********
   2          *動作：讀取8-bit陣列資料寫入EEPROM，再重覆讀取到LED輸出
   3          *硬體：SW1-3(P0LED)、 SW1-5~8(93c46)及J7(8-bit)ON
   4          *********************************************************/
   5          #include "..\MPC82.H"   //暫存器及組態定義
   6                                                                                                            
   7          unsigned char code Table[] 
   8           ={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80}; 
   9          main()
  10          {
  11   1        unsigned char i;//資料計數
  12   1        P0M0=0; P0M1=0xFF; //設定P0為推挽式輸出(M0-1=01)
  13   1        DI=1; DO=1; CS=0; SK=0;//設定初值
  14   1                           //有寫入時，註腳取消
  15   1        EWEN();                //致能EEPROM寫入及清除
  16   1        for(i=0;i<8;i++)       //寫入8筆資料
  17   1               WRITE_8(i,Table[i]); //寫入位址及8-bit資料
  18   1        EWDS();                //禁能EEPROM寫入及清除
  19   1                              //有寫入時，註腳取消
  20   1        while(1)               //不斷重覆讀取EEPROM的資料
  21   1        {  
  22   2          for(i=0;i<8;i++)     //讀取8筆資料
  23   2           {
  24   3             LED=~READ_8(i);    //讀取EEPROM的8-bit資料由LED輸出
  25   3                 Delay_ms(500);    //延時
  26   3           }
  27   2        }
  28   1      }
  29          /****************************************************
  30           函數名稱: Clock
  31           功能描述:送入串列EEPROM時脈信號
  32          *****************************************************/
  33          void Clock(void)
  34           { SK=0;NOP();NOP(); SK=1;NOP();NOP();}  //時脈正緣觸發
  35          /****************************************************
  36           函數名稱: SEND
  37           功能描述:送入EEPROM串列1-bit位址或資料
  38           輸入參數：flag
  39          *****************************************************/
  40          void SEND(bit flag)
  41           { DI=flag; Clock(); } 
  42          /*****************************************************
  43           函數名稱: SEND8
  44           功能描述: 串列EEPROM送入8-bit
  45           輸入參數：Addr
  46          ******************************************************/
  47          void SEND8(unsigned char Addr) 
  48          {
  49   1        char i;   
  50   1        for(i=0;i<8;i++)   //送入8-bit 
  51   1         {
  52   2           DI=  bit (Addr & 0x80);  //DI=bit7
*** ERROR C141 IN LINE 52 OF EEPROM1.C: syntax error near 'bit'
  53   2               Clock();          //串列時脈，bit送入EEPROM
  54   2           Addr= Addr << 1;  //位址左移
C51 COMPILER V9.03   EEPROM1                                                               11/27/2011 13:18:09 PAGE 2   

  55   2         }
  56   1      }
  57          /********************************************
  58           函數名稱:WRITE_8
  59           功能描述:93C46串列EEPROM送入位址及8-bit資料
  60           輸入參數：Addr,ch
  61          *********************************************/
  62          void WRITE_8(unsigned char Addr,unsigned char ch)
  63          { 
  64   1        CS=1;             //開啟EEPROM晶片
  65   1        SEND(1);          //啟始位元 
  66   1        SEND(0);          //送入操作碼0
  67   1        SEND8(0x80+Addr); //送入操作碼1及位址  
  68   1        SEND8(ch);        //寫入資料
  69   1        CS=0;             //關閉EEPROM晶片 
  70   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢  
  71   1      }
  72          /************************************************
  73           函數名稱: READ_8
  74           功能描述: 讀取93C46串列EEPROM資料
  75           輸入參數：Addr
  76           輸出參數：ch
  77          **************************************************/
  78          unsigned char READ_8(unsigned char Addr)
  79          {
  80   1        char i;
  81   1        unsigned int ch;   //8-bit資料
  82   1        CS=1;              //開啟EEPROM晶片  
  83   1        SEND(1);           //啟始位元
  84   1        SEND(1);           //送入操作碼1 
  85   1        SEND8(0x00+Addr);  //送入操作碼0及位址  
  86   1        if(DO==0)
  87   1        {
  88   2              ch=0;  //資料=0
  89   2              for(i=0; i < 8; i++)//讀取8-bit資料
  90   2               {
  91   3                 Clock();        //串列資料由DO輸出
  92   3                 ch=ch << 1;     //資料位元左移
  93   3                 if(DO==1) ch++; //若DO=1，則ch資料bit0=1
  94   3               }
  95   2         }
  96   1        CS=0;       //關閉EEPROM晶片 
  97   1        return ch;  //將8-bit資料送回主程式
  98   1      }
  99          /*************************************************
 100           函數名稱: EWEN
 101           功能描述: 93C46串列EEPROM寫入及清除致能
 102          **************************************************/
 103          void EWEN(void)   //EEPROM寫入及清除致能
 104          {
 105   1        CS=1;        //開啟EEPROM晶片
 106   1        SEND(1);     //啟始位元
 107   1        SEND(0);     //送入操作碼0
 108   1        SEND8(0x60); //送入操作碼0及指令，致能抹除/寫入動作
 109   1        CS=0;        //關閉EEPROM晶片
 110   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 111   1      }
 112          /************************************************
 113           函數名稱: EWDS
 114           功能描述: 93C46串列EEPROM寫入及清除禁能
 115          ***********************************************/
 116          void EWDS(void)//EEPROM寫入及清除禁能
C51 COMPILER V9.03   EEPROM1                                                               11/27/2011 13:18:09 PAGE 3   

 117          {
 118   1        CS=1;        //開啟EEPROM晶片
 119   1        SEND(1);     //啟始位元
 120   1        SEND(0);     //送入操作碼0
 121   1        SEND8(0x00); //送入操作碼0及指令，禁能抹除/寫入動作
 122   1        CS=0;        //關閉EEPROM晶片
 123   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 124   1      } 
 125          /*************************************************
 126           函數名稱: ERAL
 127           功能描述: 93C46串列EEPROM清除全部記憶體
 128          **************************************************/
 129          void ERAL(void) //EEPROM清除全部記憶體
 130          {
 131   1        CS=1;        //開啟EEPROM晶片
 132   1        SEND(1);     //啟始位元
 133   1        SEND(0);     //送入操作碼0
 134   1        SEND8(0x40); //送入操作碼0及指令，清除全部記憶體
 135   1        CS=0;        //關閉EEPROM晶片
 136   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 137   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
