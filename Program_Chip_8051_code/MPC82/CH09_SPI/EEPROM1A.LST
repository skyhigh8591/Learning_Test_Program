C51 COMPILER V8.17   EEPROM1A                                                              04/14/2009 16:44:52 PAGE 1   


C51 COMPILER V8.17, COMPILATION OF MODULE EEPROM1A
OBJECT MODULE PLACED IN EEPROM1A.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE EEPROM1A.C OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********** EEPROM1A.C *********************************
   2          *動作：讀取8-bit陣列資料寫入EEPROM，再重覆讀取到LED輸出
   3          *硬體：SW1-5~8(93c46)及J7(8-bit)ON
   4          ******************************************************/
   5          #include "..\MPC82.H"   //暫存器及組態定義
   6                                                                                                    
   7          unsigned char code Table[] 
   8           ={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80}; 
   9          main()
  10          {
  11   1        unsigned char i;//資料計數
  12   1        DI=1; DO=1; CS=0; SK=0;//設定初值
  13   1        SPCTL = SSIG+SPEN+MSTR+3;  //忽略SS腳、致能SPI為Master，速度為Fosc/12
  14   1      
  15   1      
  16   1        EWEN();                //致能EEPROM寫入及清除
  17   1        ERAL();                //EEPROM清除全部記憶體
  18   1        for(i=0;i<8;i++)       //寫入8筆資料
  19   1        {
  20   2           LED=~Table[i];
  21   2               WRITE_8(i,Table[i]); //寫入位址及8-bit資料
  22   2               Delay_ms(500);    //延時
  23   2         }
  24   1         
  25   1        EWDS();                //禁能EEPROM寫入及清除
  26   1      
  27   1        while(1)               //不斷重覆讀取EEPROM的資料
  28   1        {  
  29   2          for(i=0;i<8;i++)     //讀取8筆資料
  30   2           {
  31   3             LED=~READ_8(i);    //讀取EEPROM的8-bit資料由LED輸出
  32   3                 Delay_ms(500);    //延時
  33   3           }
  34   2        }
  35   1      }
  36          /****************************************************
  37           函數名稱: Clock
  38           功能描述:送入串列EEPROM時脈信號
  39          *****************************************************/
  40          void Clock(void)
  41           { 
  42   1         SK=1; Delay_ms(1); 
  43   1         SK=0; Delay_ms(1);
  44   1       }
  45          /****************************************************
  46           函數名稱: SEND
  47           功能描述:送入EEPROM串列1-bit位址或資料
  48           輸入參數：flag
  49          *****************************************************/
  50          void SEND(bit flag)
  51           { DI=flag; Clock(); } 
  52          /*****************************************************
  53           函數名稱: SEND8
  54           功能描述: 串列EEPROM送入8-bit
  55           輸入參數：Addr
C51 COMPILER V8.17   EEPROM1A                                                              04/14/2009 16:44:52 PAGE 2   

  56          ******************************************************/
  57          void SEND8(unsigned char Addr) 
  58          {
  59   1        SPDAT = Addr;
  60   1        while((SPSTAT & SPIF)==0); //若SIPF=0未發射完畢，等待之
  61   1        SPSTAT = SPIF;   //清除SPI旗標
  62   1      }
  63          /********************************************
  64           函數名稱:WRITE_8
  65           功能描述:93C46串列EEPROM送入位址及8-bit資料
  66           輸入參數：Addr,ch
  67          *********************************************/
  68          void WRITE_8(unsigned char Addr,unsigned char ch)
  69          { 
  70   1        CS=1;     //開啟EEPROM晶片
  71   1        SEND(1);          //啟始位元 
  72   1        SEND(0);          //送入操作碼0
  73   1        SEND8(0x80+Addr); //送入操作碼1及位址  
  74   1        SEND8(ch);        //寫入資料
  75   1        CS=0;             //關閉EEPROM晶片 
  76   1        CS=1; while(!DO)  Clock(); CS=0;//等待寫入完畢         
  77   1      }
  78          /*************************************************
  79           函數名稱: READ_8
  80           功能描述: 讀取93C46串列EEPROM資料
  81           輸入參數：Addr
  82           輸出參數：ch
  83          **************************************************/
  84          unsigned char READ_8(unsigned char Addr)
  85          {
  86   1        unsigned int ch;   //8-bit資料
  87   1        CS=1;              //開啟EEPROM晶片  
  88   1        SEND(1);           //啟始位元
  89   1        SEND(1);           //送入操作碼1 
  90   1        SEND8(0x00+Addr);  //送入操作碼0及位址 
  91   1        DI=1; DO=1;  SK=0;//設定初值
  92   1        Delay_ms(1);
  93   1        //while((SPSTAT & SPIF)==0); //若SIPF=0未接收完畢，等待之
  94   1        SPSTAT = SPIF;   //清除SPI旗標 
  95   1        ch = SPDAT;      //讀取EEPROM內的8-bit資料
  96   1        CS=0;       //關閉EEPROM晶片 
  97   1        return ch;  //將8-bit資料送回主程式
  98   1      }
  99          /****************************************************
 100           函數名稱: EWEN
 101           功能描述: 93C46串列EEPROM寫入及清除致能
 102          ****************************************************/
 103          void EWEN(void)   //EEPROM寫入及清除致能
 104          {
 105   1        CS=1;        //開啟EEPROM晶片
 106   1        SEND(1);     //啟始位元
 107   1        SEND(0);     //送入操作碼0
 108   1        SEND8(0x60); //送入操作碼0及指令，致能抹除/寫入動作
 109   1        CS=0;        //關閉EEPROM晶片
 110   1      }
 111          /************************************************
 112           函數名稱: EWDS
 113           功能描述: 93C46串列EEPROM寫入及清除禁能
 114          ***********************************************/
 115          void EWDS(void)//EEPROM寫入及清除禁能
 116          {
 117   1        CS=1;        //開啟EEPROM晶片
C51 COMPILER V8.17   EEPROM1A                                                              04/14/2009 16:44:52 PAGE 3   

 118   1        SEND(1);     //啟始位元
 119   1        SEND(0);     //送入操作碼0
 120   1        SEND8(0x00); //送入操作碼0及指令，禁能抹除/寫入動作
 121   1        CS=0;        //關閉EEPROM晶片
 122   1      } 
 123          /*************************************************
 124           函數名稱: ERAL
 125           功能描述: 93C46串列EEPROM清除全部記憶體
 126          **************************************************/
 127          void ERAL(void) //EEPROM清除全部記憶體
 128          {
 129   1        CS=1;        //開啟EEPROM晶片
 130   1        SEND(1);     //啟始位元
 131   1        SEND(0);     //送入操作碼0
 132   1        SEND8(0x40); //送入操作碼0及指令，禁能抹除/寫入動作
 133   1        CS=0;        //關閉EEPROM晶片
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    337    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
