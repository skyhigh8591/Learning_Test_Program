C51 COMPILER V9.02   EEPROM3                                                               08/03/2010 14:39:10 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE EEPROM3
OBJECT MODULE PLACED IN EEPROM3.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE EEPROM3.C OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*** EEPROM3.C***4*4按鍵外部中斷及EEPROM存取實習範例******
   2          *動作：在4*4矩陣開關按8個鍵,在LED輸出，
   3          *      同時寫入EEPROM，按INT1鍵讀取EEPROM的內容
   4          *硬體：SW1-3(P0LED)短路，J15(INT0)短路 
   5          *      SW1-5~8(93c46)及J7(8-bit)ON
   6          *操作：按S1~S16寫入8個資料，按INT1鍵(KEY2)讀取EEPROM的內容
   7          ***********************************************/
   8          #include "..\MPC82.H"   //暫存器及組態定義
   9          
  10          unsigned char Table[8]=0; 
  11          unsigned char i;//按鍵計數
  12          
  13          void main()
  14          {
  15   1        P0M0=0; P0M1=0xFF; //設定P0為推挽式輸出(M0-1=01)
  16   1        EA=1; EX0=1;EX1=1; //致能外部中斷
  17   1        LED=~0;         //初始顯示0
  18   1        ROW=0x0F;       //掃描輸出=0000
  19   1      
  20   1        DI=1; DO=1; CS=0; SK=0;//設定初值
  21   1        EWEN();                //致能EEPROM寫入及清除
  22   1        ERAL();                //EEPROM清除全部記憶體
  23   1        while(1);              //等待按鍵，此時可做其它工作
  24   1      }
  25           //***********************************************
  26           void INT1_Interrupt() interrupt 2   //INT1中斷函數     
  27          { 
  28   1         for(i=0;i<8;i++)      //寫入8筆資料
  29   1          WRITE_8(i,Table[i]); //寫入位址及8-bit資料
  30   1         EWDS();               //禁能EEPROM寫入及清除
  31   1          for(i=0;i<8;i++)     //讀取8筆資料
  32   1           {
  33   2             LED=~READ_8(i);   //讀取EEPROM的8-bit資料由LED輸出
  34   2                 Delay_ms(500);    //延時
  35   2           }
  36   1        EWEN();  //重新致能EEPROM允許寫入及清除
  37   1      }
  38          //***********************************************
  39          void INT0_Interrupt() interrupt 0   //INT0中斷函數      
  40          { 
  41   1         unsigned char key=0;     //宣告按鍵計數
  42   1         unsigned char scan=0xEF;  //按鍵掃描令ROW0=0，其餘為1
  43   1         while(1)
  44   1         {
  45   2           ROW=scan;            //掃描輸出
  46   2               if(!(COL0 & COL1 & COL2 & COL3)) break;//若COL0~3其中之一為0，退出顯示 
  47   2           scan=RL8(scan); //左旋轉，換掃下一列,令ROW0~3輪流為0
  48   2           key=key+4; //基數+4
  49   2         }
  50   1         if(COL0==0) {LED=~key;Table[i]=key;i++;} //檢查COL0列，若有按鍵計數輸出
  51   1         key++;                //若不是按鍵計數遞加  
  52   1         if(COL1==0) {LED=~key;Table[i]=key;i++;} //檢查COL1列，若有按鍵計數輸出
  53   1         key++;                //若不是按鍵計數遞加
  54   1         if(COL2==0) {LED=~key;Table[i]=key;i++;} //檢查COL2列，若有按鍵計數輸出
  55   1         key++;                //若不是按鍵計數遞加
C51 COMPILER V9.02   EEPROM3                                                               08/03/2010 14:39:10 PAGE 2   

  56   1         if(COL3==0) {LED=~key;Table[i]=key;i++;} //檢查COL3列，若有按鍵計數輸出
  57   1         if(i>7) i=0;
  58   1         Delay_ms(1);//處理按鍵跳動之延遲   
  59   1         while(!(COL0 & COL1 & COL2 & COL3));//若COL0~3≠1111未放開按鍵
  60   1         Delay_ms(1);//處理按鍵跳動之延遲     
  61   1         ROW=0x0F;   //掃描輸出=0000    
  62   1         }
  63          /****************************************************
  64           函數名稱: Clock
  65           功能描述:送入串列EEPROM時脈信號
  66          *****************************************************/
  67          void Clock(void)
  68           {  SK=0; SK=1;}  //時脈正緣觸發
  69          /****************************************************
  70           函數名稱: SEND
  71           功能描述:送入EEPROM串列1-bit位址或資料
  72           輸入參數：flag
  73          *****************************************************/
  74          void SEND(bit flag)
  75           { DI=flag; Clock(); } 
  76          /*****************************************************
  77           函數名稱: SEND8
  78           功能描述: 串列EEPROM送入8-bit
  79           輸入參數：Addr
  80          ******************************************************/
  81          void SEND8(unsigned char Addr) 
  82          {
  83   1        char i;   
  84   1        for(i=0;i<8;i++)   //送入8-bit 
  85   1         {
  86   2           DI= Addr & 0x80;  //DI=bit7
  87   2               Clock();          //串列時脈，bit送入EEPROM
  88   2           Addr= Addr << 1;  //位址左移
  89   2         }
  90   1      }
  91          /********************************************
  92           函數名稱:WRITE_8
  93           功能描述:93C46串列EEPROM送入位址及8-bit資料
  94           輸入參數：Addr,ch
  95          *********************************************/
  96          void WRITE_8(unsigned char Addr,unsigned char ch)
  97          { 
  98   1        CS=1;             //開啟EEPROM晶片
  99   1        SEND(1);          //啟始位元 
 100   1        SEND(0);          //送入操作碼0
 101   1        SEND8(0x80+Addr); //送入操作碼1及位址  
 102   1        SEND8(ch);        //寫入資料
 103   1        CS=0;             //關閉EEPROM晶片 
 104   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢  
 105   1      }
 106          /************************************************
 107           函數名稱: READ_8
 108           功能描述: 讀取93C46串列EEPROM資料
 109           輸入參數：Addr
 110           輸出參數：ch
 111          **************************************************/
 112          unsigned char READ_8(unsigned char Addr)
 113          {
 114   1        char i;
 115   1        unsigned int ch;   //8-bit資料
 116   1        CS=1;              //開啟EEPROM晶片  
 117   1        SEND(1);           //啟始位元
C51 COMPILER V9.02   EEPROM3                                                               08/03/2010 14:39:10 PAGE 3   

 118   1        SEND(1);           //送入操作碼1 
 119   1        SEND8(0x00+Addr);  //送入操作碼0及位址  
 120   1        if(DO==0)
 121   1        {
 122   2              ch=0;  //資料=0
 123   2              for(i=0; i < 8; i++)//讀取8-bit資料
 124   2               {
 125   3                 Clock();        //串列資料由DO輸出
 126   3                 ch=ch << 1;     //資料位元左移
 127   3                 if(DO==1) ch++; //若DO=1，則ch資料bit0=1
 128   3               }
 129   2         }
 130   1        CS=0;       //關閉EEPROM晶片 
 131   1        return ch;  //將8-bit資料送回主程式
 132   1      }
 133          /*************************************************
 134           函數名稱: EWEN
 135           功能描述: 93C46串列EEPROM寫入及清除致能
 136          **************************************************/
 137          void EWEN(void)   //EEPROM寫入及清除致能
 138          {
 139   1        CS=1;        //開啟EEPROM晶片
 140   1        SEND(1);     //啟始位元
 141   1        SEND(0);     //送入操作碼0
 142   1        SEND8(0x60); //送入操作碼0及指令，致能抹除/寫入動作
 143   1        CS=0;        //關閉EEPROM晶片
 144   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 145   1      }
 146          /************************************************
 147           函數名稱: EWDS
 148           功能描述: 93C46串列EEPROM寫入及清除禁能
 149          ***********************************************/
 150          void EWDS(void)//EEPROM寫入及清除禁能
 151          {
 152   1        CS=1;        //開啟EEPROM晶片
 153   1        SEND(1);     //啟始位元
 154   1        SEND(0);     //送入操作碼0
 155   1        SEND8(0x00); //送入操作碼0及指令，禁能抹除/寫入動作
 156   1        CS=0;        //關閉EEPROM晶片
 157   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 158   1      } 
 159          /*************************************************
 160           函數名稱: ERAL
 161           功能描述: 93C46串列EEPROM清除全部記憶體
 162          **************************************************/
 163          void ERAL(void) //EEPROM清除全部記憶體
 164          {
 165   1        CS=1;        //開啟EEPROM晶片
 166   1        SEND(1);     //啟始位元
 167   1        SEND(0);     //送入操作碼0
 168   1        SEND8(0x40); //送入操作碼0及指令，禁能抹除/寫入動作
 169   1        CS=0;        //關閉EEPROM晶片
 170   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    639    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
C51 COMPILER V9.02   EEPROM3                                                               08/03/2010 14:39:10 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
