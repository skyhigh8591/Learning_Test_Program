C51 COMPILER V9.02   KEY5B                                                                 08/03/2010 14:23:04 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE KEY5B
OBJECT MODULE PLACED IN KEY5B.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE KEY5B.C OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /******** KEY5A.C******4*4外部中斷實習範例***************
   2          *動作：ROW0~3掃描輸出,COL0~3按鍵輸入,在LED輸出
   3          *硬體：SW1-3(P0LED)短路，J15(INT0)短路，按S1~S16 
   4          ***********************************************/
   5          #include "..\MPC82.H"   //暫存器及組態定義
   6          
   7          unsigned char Table[8]=0; 
   8          unsigned char i;//資料計數
   9          
  10          void main()
  11          {
  12   1        P0M0=0; P0M1=0xFF; //設定P0為推挽式輸出(M0-1=01)
  13   1        EA=1; EX0=1;EX1=1;   //致能外部中斷
  14   1        IT1=1;
  15   1        LED=~0;         //初始顯示0
  16   1        LED1=~0;
  17   1        ROW=0x0F;       //掃描輸出=0000
  18   1      
  19   1        DI=1; DO=1; CS=0; SK=0;//設定初值
  20   1        EWEN();                //致能EEPROM寫入及清除
  21   1        ERAL();                //EEPROM清除全部記憶體
  22   1        while(1);              //等待按鍵，此時可做其它工作
  23   1      }
  24           //***********************************************
  25           void INT1_Interrupt() interrupt 2   //INT1中斷函數     
  26          { 
  27   1         for(i=0;i<8;i++)       //寫入8筆資料
  28   1          WRITE_8(i,~Table[i]); //寫入位址及8-bit資料
  29   1         EWDS();                //禁能EEPROM寫入及清除
  30   1                              //無寫入時，註腳取消
  31   1          for(i=0;i<8;i++)     //讀取8筆資料
  32   1           {
  33   2             LED=~READ_8(i);    //讀取EEPROM的8-bit資料由LED輸出
  34   2                 Delay_ms(500);    //延時
  35   2                 EWEN();
  36   2           }
  37   1      }
  38          //***********************************************
  39          void INT0_Interrupt() interrupt 0   //INT0中斷函數      
  40          { 
  41   1         unsigned char key=0;     //宣告按鍵計數
  42   1         unsigned char scan=0xEF;  //按鍵掃描令ROW0=0，其餘為1
  43   1         while(1)
  44   1         {
  45   2           ROW=scan;            //掃描輸出
  46   2               if(!(COL0 & COL1 & COL2 & COL3)) break;//若COL0~3其中之一為0，退出顯示 
  47   2           scan=RL8(scan); //左旋轉，換掃下一列,令ROW0~3輪流為0
  48   2           key=key+4; //基數+4
  49   2         }
  50   1         if(COL0==0) {LED=~key;Table[i]=LED;i++;} //檢查COL0列，若有按鍵計數輸出
  51   1         key++;                //若不是按鍵計數遞加  
  52   1         if(COL1==0) {LED=~key;Table[i]=LED;i++;} //檢查COL1列，若有按鍵計數輸出
  53   1         key++;                //若不是按鍵計數遞加
  54   1         if(COL2==0) {LED=~key;Table[i]=LED;i++;} //檢查COL2列，若有按鍵計數輸出
  55   1         key++;                //若不是按鍵計數遞加
C51 COMPILER V9.02   KEY5B                                                                 08/03/2010 14:23:04 PAGE 2   

  56   1         if(COL3==0) {LED=~key;Table[i]=LED;i++;} //檢查COL3列，若有按鍵計數輸出
  57   1      
  58   1         Delay_ms(1);//處理按鍵跳動之延遲   
  59   1         while(!(COL0 & COL1 & COL2 & COL3));//若COL0~3≠1111未放開按鍵
  60   1         Delay_ms(1);//處理按鍵跳動之延遲     
  61   1         ROW=0x0F;   //掃描輸出=0000    
  62   1         }
  63          
  64           /****************************************************
  65           函數名稱: Clock
  66           功能描述:送入串列EEPROM時脈信號
  67          *****************************************************/
  68          void Clock(void)
  69           {  SK=0; SK=1;}  //時脈正緣觸發
  70          /****************************************************
  71           函數名稱: SEND
  72           功能描述:送入EEPROM串列1-bit位址或資料
  73           輸入參數：flag
  74          *****************************************************/
  75          void SEND(bit flag)
  76           { DI=flag; Clock(); } 
  77          /*****************************************************
  78           函數名稱: SEND8
  79           功能描述: 串列EEPROM送入8-bit
  80           輸入參數：Addr
  81          ******************************************************/
  82          void SEND8(unsigned char Addr) 
  83          {
  84   1        char i;   
  85   1        for(i=0;i<8;i++)   //送入8-bit 
  86   1         {
  87   2           DI= Addr & 0x80;  //DI=bit7
  88   2               Clock();          //串列時脈，bit送入EEPROM
  89   2           Addr= Addr << 1;  //位址左移
  90   2         }
  91   1      }
  92          /********************************************
  93           函數名稱:WRITE_8
  94           功能描述:93C46串列EEPROM送入位址及8-bit資料
  95           輸入參數：Addr,ch
  96          *********************************************/
  97          void WRITE_8(unsigned char Addr,unsigned char ch)
  98          { 
  99   1        CS=1;             //開啟EEPROM晶片
 100   1        SEND(1);          //啟始位元 
 101   1        SEND(0);          //送入操作碼0
 102   1        SEND8(0x80+Addr); //送入操作碼1及位址  
 103   1        SEND8(ch);        //寫入資料
 104   1        CS=0;             //關閉EEPROM晶片 
 105   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢  
 106   1      }
 107          /************************************************
 108           函數名稱: READ_8
 109           功能描述: 讀取93C46串列EEPROM資料
 110           輸入參數：Addr
 111           輸出參數：ch
 112          **************************************************/
 113          unsigned char READ_8(unsigned char Addr)
 114          {
 115   1        char i;
 116   1        unsigned int ch;   //8-bit資料
 117   1        CS=1;              //開啟EEPROM晶片  
C51 COMPILER V9.02   KEY5B                                                                 08/03/2010 14:23:04 PAGE 3   

 118   1        SEND(1);           //啟始位元
 119   1        SEND(1);           //送入操作碼1 
 120   1        SEND8(0x00+Addr);  //送入操作碼0及位址  
 121   1        if(DO==0)
 122   1        {
 123   2              ch=0;  //資料=0
 124   2              for(i=0; i < 8; i++)//讀取8-bit資料
 125   2               {
 126   3                 Clock();        //串列資料由DO輸出
 127   3                 ch=ch << 1;     //資料位元左移
 128   3                 if(DO==1) ch++; //若DO=1，則ch資料bit0=1
 129   3               }
 130   2         }
 131   1        CS=0;       //關閉EEPROM晶片 
 132   1        return ch;  //將8-bit資料送回主程式
 133   1      }
 134          /*************************************************
 135           函數名稱: EWEN
 136           功能描述: 93C46串列EEPROM寫入及清除致能
 137          **************************************************/
 138          void EWEN(void)   //EEPROM寫入及清除致能
 139          {
 140   1        CS=1;        //開啟EEPROM晶片
 141   1        SEND(1);     //啟始位元
 142   1        SEND(0);     //送入操作碼0
 143   1        SEND8(0x60); //送入操作碼0及指令，致能抹除/寫入動作
 144   1        CS=0;        //關閉EEPROM晶片
 145   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 146   1      }
 147          /************************************************
 148           函數名稱: EWDS
 149           功能描述: 93C46串列EEPROM寫入及清除禁能
 150          ***********************************************/
 151          void EWDS(void)//EEPROM寫入及清除禁能
 152          {
 153   1        CS=1;        //開啟EEPROM晶片
 154   1        SEND(1);     //啟始位元
 155   1        SEND(0);     //送入操作碼0
 156   1        SEND8(0x00); //送入操作碼0及指令，禁能抹除/寫入動作
 157   1        CS=0;        //關閉EEPROM晶片
 158   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 159   1      } 
 160          /*************************************************
 161           函數名稱: ERAL
 162           功能描述: 93C46串列EEPROM清除全部記憶體
 163          **************************************************/
 164          void ERAL(void) //EEPROM清除全部記憶體
 165          {
 166   1        CS=1;        //開啟EEPROM晶片
 167   1        SEND(1);     //啟始位元
 168   1        SEND(0);     //送入操作碼0
 169   1        SEND8(0x40); //送入操作碼0及指令，禁能抹除/寫入動作
 170   1        CS=0;        //關閉EEPROM晶片
 171   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 172   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    637    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.02   KEY5B                                                                 08/03/2010 14:23:04 PAGE 4   

   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
