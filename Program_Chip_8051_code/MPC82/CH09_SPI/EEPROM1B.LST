C51 COMPILER V8.16   EEPROM1B                                                              02/13/2009 15:58:45 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE EEPROM1B
OBJECT MODULE PLACED IN EEPROM1B.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE EEPROM1B.C OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********** EEPROM1.C *********************************
   2          *動作：讀取8-bit陣列資料寫入EEPROM，再重覆讀取到LED輸出
   3          *接腳：CS=P27,SK=P26,DI=P25,DO=P24,ORG=接地
   4          ******************************************************/
   5          #include "..\MPC82.H"   //暫存器及組態定義
   6                                                                                                            
   7          unsigned char code Table[] 
   8           ={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80}; 
   9          main()
  10          {
  11   1        unsigned char i;//資料計數
  12   1        DI=1; DO=1; CS=0; SK=1;//設定初值
  13   1          SPCTL = SSIG+SPEN+MSTR+7;  //忽略SS腳、致能SPI為Master，速度為Fosc/12
  14   1      
  15   1        EWEN();                //致能EEPROM寫入及清除
  16   1        
  17   1        ERAL();                //EEPROM清除全部記憶體
  18   1        for(i=0;i<8;i++)       //寫入8筆資料
  19   1          WRITE_8(i,Table[i]); //寫入位址及8-bit資料
  20   1        EWDS();                //禁能EEPROM寫入及清除
  21   1       
  22   1        while(1)               //不斷重覆讀取EEPROM的資料
  23   1        {  
  24   2          for(i=0;i<8;i++)     //讀取8筆資料
  25   2           {
  26   3             LED=~READ_8(i);    //讀取EEPROM的8-bit資料由LED輸出
  27   3                 Delay_ms(500);    //延時
  28   3           }
  29   2        }
  30   1      }
  31          /****************************************************
  32           函數名稱: Clock
  33           功能描述:送入串列EEPROM時脈信號
  34          *****************************************************/
  35          void Clock(void)
  36           { SK=1;Delay_ms(1);  SK=0;Delay_ms(1); }
  37          /****************************************************
  38           函數名稱: SEND
  39           功能描述:送入EEPROM串列1-bit位址或資料
  40           輸入參數：flag
  41          *****************************************************/
  42          void SEND(bit flag)
  43           { DI=flag; Clock(); } 
  44          /*****************************************************
  45           函數名稱: SEND8
  46           功能描述: 串列EEPROM送入8-bit
  47           輸入參數：Addr
  48          ******************************************************/
  49          void SEND8(unsigned char Addr) 
  50          {
  51   1        SPDAT = Addr;
  52   1        Delay_ms(1);
  53   1       // while((SPSTAT & SPIF)==0); //若SIPF=0未發射完畢，等待之
  54   1        SPSTAT = SPIF;   //清除SPI旗標
  55   1      }
C51 COMPILER V8.16   EEPROM1B                                                              02/13/2009 15:58:45 PAGE 2   

  56          /********************************************
  57           函數名稱:WRITE_8
  58           功能描述:93C46串列EEPROM送入位址及8-bit資料
  59           輸入參數：Addr,ch
  60          *********************************************/
  61          void WRITE_8(unsigned char Addr,unsigned char ch)
  62          { 
  63   1        CS=1;     //開啟EEPROM晶片
  64   1        SEND(1);          //啟始位元 
  65   1        SEND(0);          //送入操作碼0
  66   1        SEND8(0x80+Addr); //送入操作碼1及位址  
  67   1        SEND8(ch);        //寫入資料
  68   1        CS=0;             //關閉EEPROM晶片 
  69   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢  
  70   1      }
  71          /*************************************************
  72           函數名稱: READ_8
  73           功能描述: 讀取93C46串列EEPROM資料
  74           輸入參數：Addr
  75           輸出參數：ch
  76          **************************************************/
  77          unsigned char READ_8(unsigned char Addr)
  78          {
  79   1        char i;
  80   1        unsigned int ch;   //8-bit資料
  81   1        CS=1;              //開啟EEPROM晶片  
  82   1        SEND(1);           //啟始位元
  83   1        SEND(1);           //送入操作碼1 
  84   1        SEND8(0x00+Addr);  //送入操作碼0及位址  
  85   1        if(DO==0)
  86   1        {
  87   2               Delay_ms(1);
  88   2           //while((SPSTAT & SPIF)==0); //若SIPF=0未接收完畢，等待之
  89   2           SPSTAT = SPIF;   //清除SPI旗標 
  90   2           ch = SPDAT;           //讀取EEPROM內的8-bit資料
  91   2         }
  92   1        CS=0;       //關閉EEPROM晶片 
  93   1        return ch;  //將8-bit資料送回主程式
  94   1      }
*** WARNING C280 IN LINE 79 OF EEPROM1B.C: 'i': unreferenced local variable
  95          /****************************************************
  96           函數名稱: EWEN
  97           功能描述: 93C46串列EEPROM寫入及清除致能
  98          ****************************************************/
  99          void EWEN(void)   //EEPROM寫入及清除致能
 100          {
 101   1        CS=1;        //開啟EEPROM晶片
 102   1        SEND(1);     //啟始位元
 103   1        SEND(0);     //送入操作碼0
 104   1        SEND8(0x60); //送入操作碼0及指令，致能抹除/寫入動作
 105   1        CS=0;        //關閉EEPROM晶片
 106   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 107   1      }
 108          /************************************************
 109           函數名稱: EWDS
 110           功能描述: 93C46串列EEPROM寫入及清除禁能
 111          ***********************************************/
 112          void EWDS(void)//EEPROM寫入及清除禁能
 113          {
 114   1        CS=1;        //開啟EEPROM晶片
 115   1        SEND(1);     //啟始位元
 116   1        SEND(0);     //送入操作碼0
C51 COMPILER V8.16   EEPROM1B                                                              02/13/2009 15:58:45 PAGE 3   

 117   1        SEND8(0x00); //送入操作碼0及指令，禁能抹除/寫入動作
 118   1        CS=0;        //關閉EEPROM晶片
 119   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 120   1      } 
 121          /*************************************************
 122           函數名稱: ERAL
 123           功能描述: 93C46串列EEPROM清除全部記憶體
 124          **************************************************/
 125          void ERAL(void) //EEPROM清除全部記憶體
 126          {
 127   1        CS=1;        //開啟EEPROM晶片
 128   1        SEND(1);     //啟始位元
 129   1        SEND(0);     //送入操作碼0
 130   1        SEND8(0x40); //送入操作碼0及指令，禁能抹除/寫入動作
 131   1        CS=0;        //關閉EEPROM晶片
 132   1        CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    353    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
