C51 COMPILER V9.56.0.0   KEY7                                                              03/06/2020 15:22:01 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY7
OBJECT MODULE PLACED IN KEY7.OBJ
COMPILER INVOKED BY: C:\Keil_v51\C51\BIN\C51.EXE KEY7.C OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /******** KEY7.C******************************************
   2          *動作：按鍵由LCD顯示4位數四則運算
   3          *操作：按鍵A=(+),B=(-),C=(*),D=(/),E=(=),F=(CLR) 
   4          **********************************************************/
   5          #include "..\MPC82.H"   //暫存器及組態定義
   6          void dataout(uint8 keyout); //按鍵資料輸出
   7          void LCD_Disp8(unsigned long disp);//LCD顯示8位數十進制數字
   8          unsigned char i=0; 
   9          unsigned long lcd_count;
  10          unsigned long lcd_count1;
  11          void main()
  12          {
  13   1       char count=0;   //按鍵計數=0
  14   1       unsigned char scan=0xEF;  //按鍵掃描令ROW0=0，其餘為1
  15   1       LCD_init();      // 重置及清除LCD
  16   1       LCD_Cmd(0x80);     //游標由第一行開始顯示  
  17   1       while(1)   //重覆執行
  18   1        {
  19   2          if(count>15){scan=0xEF;count=0;}//若計數>15，從頭開始
  20   2          ROW=scan;     //掃描輸出
  21   2          if(COL0==0) dataout(count);//檢查COL0列，若是計數輸出
  22   2          count++; Delay_ms(1);      //若不是，計數+1
  23   2          if(COL1==0) dataout(count);//檢查COL1列，若是計數輸出
  24   2          count++; Delay_ms(1);      //若不是，計數+1
  25   2          if(COL2==0) dataout(count);//檢查COL2列，若是計數輸出
  26   2          count++; Delay_ms(1);      //若不是，計數+1
  27   2          if(COL3==0) dataout(count);//檢查COL3列，若是計數輸出
  28   2          count++; Delay_ms(1);      //若不是，計數+1
  29   2          scan=RL8(scan); //左旋轉，換掃下一列,令ROW0~3輪流為0
  30   2         }
  31   1      }
  32          /***********************************************************
  33          *函數名稱: dataout
  34          *功能描述: 按鍵輸出資料送到LCD顯示數字，檢查是否放開按鍵
  35          *輸入參數：keyout
  36          ************************************************************/
  37          void dataout(char keyout) 
  38          { 
  39   1        LCD_Cmd(0x01);LCD_Cmd(0x02); //清除顯示幕,游標回原位  
  40   1        //LCD_init();     
  41   1        if(keyout==10) {i=1;LCD_Disp8(lcd_count); LCD_Data('+');} 
  42   1        if(keyout==11) {i=2;LCD_Disp8(lcd_count); LCD_Data('-');}
  43   1        if(keyout==12) {i=3;LCD_Disp8(lcd_count); LCD_Data('*');}
  44   1        if(keyout==13) {i=4;LCD_Disp8(lcd_count); LCD_Data('/');};
  45   1        if(keyout<=9) //限制輸入0~9鍵
  46   1         { 
  47   2           if(i==0)
  48   2         {
  49   3            lcd_count=(lcd_count*10)+keyout; //數字進位
  50   3                             //若計數超過9999僅顯示後四碼
  51   3            if(lcd_count>9999) lcd_count=lcd_count % 10000; 
  52   3            LCD_Disp8(lcd_count); //LCD顯示4位數十進制數字
  53   3          }
  54   2         else
  55   2           {
C51 COMPILER V9.56.0.0   KEY7                                                              03/06/2020 15:22:01 PAGE 2   

  56   3            lcd_count1=(lcd_count1*10)+keyout;  //數字進位
  57   3              //若計數超過9999僅顯示後四碼
  58   3              if(lcd_count1>9999) lcd_count1=lcd_count1 % 10000; 
  59   3        if(i==1) {LCD_Disp8(lcd_count); LCD_Data('+');} 
  60   3              if(i==2) {LCD_Disp8(lcd_count); LCD_Data('-');}
  61   3              if(i==3) {LCD_Disp8(lcd_count); LCD_Data('*');}
  62   3              if(i==4) {LCD_Disp8(lcd_count); LCD_Data('/');}
  63   3              LCD_Disp8(lcd_count1); //LCD顯示4位數十進制數字
  64   3             }
  65   2         }
  66   1      
  67   1         if(keyout==14)
  68   1         {          
  69   2          if(i==1) {
  70   3               LCD_Disp8(lcd_count); 
  71   3               LCD_Data('+');
  72   3               LCD_Disp8(lcd_count1);
  73   3               LCD_Data('=');
  74   3               lcd_count1=lcd_count + lcd_count1; }                         
  75   2              if(i==2) {
  76   3               LCD_Disp8(lcd_count);
  77   3                LCD_Data('-');
  78   3                LCD_Disp8(lcd_count1);
  79   3                LCD_Data('='); 
  80   3                lcd_count1=lcd_count - lcd_count1;}
  81   2              if(i==3) {
  82   3               LCD_Disp8(lcd_count); 
  83   3               LCD_Data('*');
  84   3               LCD_Disp8(lcd_count1);
  85   3               LCD_Data('=');
  86   3               lcd_count1=lcd_count * lcd_count1; }
  87   2              if(i==4) {
  88   3                LCD_Disp8(lcd_count);
  89   3                LCD_Data('/');
  90   3                LCD_Disp8(lcd_count1);
  91   3                LCD_Data('=');
  92   3               lcd_count1=lcd_count / lcd_count1; }
  93   2              i=0;
  94   2              LCD_Disp8(lcd_count1);  
  95   2              lcd_count=0;  
  96   2              lcd_count1=0;
  97   2            }
  98   1         
  99   1        if(keyout==15)   //CLR
 100   1         {
 101   2            LCD_init();       // 重置及清除LCD
 102   2            LCD_Cmd(0x80);     //游標由第一行開始顯示
 103   2         }
 104   1      
 105   1        Delay_ms(1);        //處理按鍵跳動之延遲
 106   1        while(!(COL0 & COL1 & COL2 & COL3));//若COL0~3≠1111未放開按鍵
 107   1        Delay_ms(1);       //處理按鍵跳動之延遲
 108   1      }
 109          /*****************************************************
 110          * 函數名稱: LCD_Disp8(unsigned int disp)
 111          * 功能描述: LCD顯示8位數十進制數字
 112          * 輸入參數：disp
 113          *******************************************************/
 114          void LCD_Disp8(unsigned long disp)  // LCD顯示8位數十進制數字
 115          {
 116   1       if(disp>9999999) LCD_Data(disp / 10000000+'0');
 117   1       if(disp>999999) LCD_Data(disp % 10000000/1000000+'0');
C51 COMPILER V9.56.0.0   KEY7                                                              03/06/2020 15:22:01 PAGE 3   

 118   1       if(disp>99999) LCD_Data(disp % 1000000/100000+'0');
 119   1       if(disp>9999) LCD_Data(disp % 100000/10000+'0');
 120   1       if(disp>999) LCD_Data(disp % 10000/1000+'0');
 121   1       if(disp>99) LCD_Data(disp % 1000/100+'0');
 122   1       if(disp>9)LCD_Data(disp % 100/10+'0');
 123   1       LCD_Data(disp % 10+'0');
 124   1      }
 125          /***********************************************************
 126          *函數名稱: LCD_Data
 127          *功能描述: 傳送資料到文字型LCD
 128          *輸入參數：dat
 129          ************************************************************/
 130          void LCD_Data(char dat)  //傳送資料到LCD
 131          {
 132   1          Data=dat; //資料送到BUS
 133   1          RS=1;RW=0;EN=1;//資料寫入到LCD內
 134   1          Delay_ms(1);   //LCD等待寫入完成
 135   1          EN=0;          //禁能LCD    
 136   1      }
 137          /***************************************************************
 138          *函數名稱: LCD_Cmd
 139          *功能描述: 傳送命令到文字型LCD
 140          *輸入參數：Cmd
 141          ************************************************************/
 142          void LCD_Cmd(unsigned char Cmd) //傳送命令到LCD
 143          {
 144   1          Data=Cmd;  //命令送到BUS
 145   1          RS=0;RW=0;EN=1; //命令寫入到LCD內
 146   1          Delay_ms(1);    //LCD等待寫入完成     
 147   1          EN=0;           //禁能LCD
 148   1      }
 149          /***************************************************************
 150          *函數名稱: LCD_init
 151          *功能描述: 啟始化文字型LCD
 152          *****************************************************************/
 153          void LCD_init(void)    //LCD的啟始程式  
 154          {
 155   1          LCD_Cmd(0x38);//0011 1000,8bit傳輸,顯示2行,5*7字型
 156   1          LCD_Cmd(0x38);//bit4:DL=1,8bit傳輸,
 157   1          LCD_Cmd(0x38);//bit3:N=1,顯示2行
 158   1                        //bit2:F=0,5*7字型    
 159   1          LCD_Cmd(0x0f);/*0000 1100,顯示幕ON,顯示游標,游標閃爍
 160   1                          bit2:D=1,顯示幕ON
 161   1                          bit1:C=1,顯示游標
 162   1                        bit0:B=1,游標閃爍*/
 163   1          LCD_Cmd(0x06);/*0000 0110,//顯示完游標右移,游標移位禁能 
 164   1                          bit1:I/D=1,顯示完游標右移,
 165   1                          bit0:S=0,游標移位禁能*/  
 166   1          LCD_Cmd(0x01); //清除顯示幕  
 167   1          LCD_Cmd(0x02); //游標回原位  
 168   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1522    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.56.0.0   KEY7                                                              03/06/2020 15:22:01 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
